============================= test session starts =============================
platform win32 -- Python 3.12.3, pytest-8.2.0, pluggy-1.5.0
rootdir: C:\Users\admin\Uni\Module\Projekt_Symbolische_KI\Projekt\projektSKI\tests
collected 49 items

test_moveGenerator.py ......F............ss..................s.......ss  [100%]

================================== FAILURES ===================================
_____________ moveGenerator.test_TOTAL_ISIS_gameplay2_unmakeMove ______________

self = <tests.test_moveGenerator.moveGenerator testMethod=test_TOTAL_ISIS_gameplay2_unmakeMove>

    def test_TOTAL_ISIS_gameplay2_unmakeMove(self):
        def figureCount(bb: np.ndarray[np.uint64]):
                val1 = bin(bb[GameState._ZARR_INDEX_R_PAWNS])[2:].count("1")+ bin(bb[GameState._ZARR_INDEX_R_KNIGHTS])[2:].count("1")
                val2 = bin(bb[GameState._ZARR_INDEX_B_PAWNS])[2:].count("1")+ bin(bb[GameState._ZARR_INDEX_B_KNIGHTS])[2:].count("1")
                return val1,val2
        def checkCount(before,after):
            return all(list(map(lambda t: t[0] >= t[1], zip(before,after))))
    
        fdscr = open('test_data.json')
        moves = json.load(fdscr)
    
        testcases = [(move['board'],move['moves']) for move in moves]
    
        for case in testcases:
            fen,player = np.array(case[0].split(" "))
            #movelist = np.array([move.replace(" ","") for move in case[1].split(",")])
            print("FEN:", fen)
    
            bb = GameState.createBitBoardFromFEN(fen)
            initalBoard = bb.copy()
            mv = MoveGenerator(bb,True)
            gameover = [DictMoveEntry.CONTINUE_GAME]
            RedsTurn = True if player =="r" else False
            before = figureCount(bb)
            while(gameover[0] is DictMoveEntry.CONTINUE_GAME):
    
                player = Player.Red if RedsTurn else Player.Blue
                moves = mv.genMoves(player,gameover,bb)
    
                print("Players turn: ", player)
    
                a,b = 0, len(moves)
                move = moves[random.randint(a,b-1)]
                mv.prettyPrintMoves([move])
                #bb = mv.execSingleMove(move,player, gameover,bb)
                mv.execSingleMove(move,player, gameover,bb)
                mv.prettyPrintBoard(bb,gameover)
                print("Figure count r and b before move exec:", before)
                after = figureCount(bb)
                print("Figure count r and b after move exec:", after )
                correctness = checkCount(before,after)
                self.assertEqual(True, correctness)
                before = after
                #mv.prettyPrintBoard(bb,gameover)
                RedsTurn = not RedsTurn
            print("end status:\n")
            mv.prettyPrintBoard(bb,gameover)
            self.assertIsNot(gameover[0],DictMoveEntry.CONTINUE_GAME )
    
            sizeOfStack = len(mv._stack)
            [mv.takeback(bb) for x in range(sizeOfStack)]
            print("unmaking all moves..\n initial Board is:")
            mv.prettyPrintBoard(initalBoard,[DictMoveEntry.CONTINUE_GAME])
            print("reconstructed board is:\n")
            mv.prettyPrintBoard(bb,[DictMoveEntry.CONTINUE_GAME])
>           [self.assertEqual(boards[0], boards[1]) for boards in list(zip(initalBoard,bb))]
E           AssertionError: np.uint64(0) != np.uint64(8589934592)

test_moveGenerator.py:899: AssertionError
---------------------------- Captured stdout call -----------------------------
FEN: 1b0b0b0b0b0/1b01bb2b01/8/3bb1b02/5rr2/2r01r03/2rr5/r0r0r0r0r0r0
Board init:
current Board
 [[0. 1. 1. 1. 1. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 8. 0. 0. 4. 0.]
 [0. 0. 4. 4. 4. 4. 4. 0.]]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E1-E2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 1. 1. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 8. 4. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (12, 12)
Figure count r and b after move exec: (12, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F8-G8', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 1. 1. 1. 1. 0. 2. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 8. 4. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (12, 12)
Figure count r and b after move exec: (12, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D2-C4', [<BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 1. 1. 1. 1. 0. 2. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 4. 4. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (12, 12)
Figure count r and b after move exec: (12, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D8-C8', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 1. 2. 0. 1. 0. 2. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 4. 4. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (12, 12)
Figure count r and b after move exec: (12, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E2-E3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 2. 0. 1. 0. 2. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]
 [0. 4. 0. 4. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (12, 12)
Figure count r and b after move exec: (12, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C8-D6', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 1. 1. 0. 1. 0. 2. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]
 [0. 4. 0. 4. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (12, 12)
Figure count r and b after move exec: (12, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D2-C2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 2. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (12, 12)
Figure count r and b after move exec: (12, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C6-B6', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 2. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 1. 0. 1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (12, 12)
Figure count r and b after move exec: (12, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D4-E6', [<BoardCommand.Hit_Red_PawnOnTarget: 0>, <BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 1. 1. 0. 1. 0. 2. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 1. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (12, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F5-H4', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 1. 1. 0. 1. 0. 2. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 1. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 4. 0. 4. 0. 1.]
 [0. 0. 0. 0. 4. 0. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E3-E4', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 2. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 1. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('G8-F6', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 1. 0. 1. 4. 1. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F1-G1', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 1. 0. 1. 4. 1. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 0. 8. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('B6-B5', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 0. 8. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G1-F3', [<BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 0. 0. 0. 4. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F5-G5', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 1. 0. 0. 0. 0. 1. 0.]
 [0. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 0. 0. 0. 4. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G1-F1', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 1. 0. 0. 0. 0. 1. 0.]
 [0. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 0. 0. 0. 4. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C7-D5', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 1. 0. 1. 0. 0. 1. 0.]
 [0. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 0. 0. 0. 4. 0. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C2-C3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 1. 0. 1. 0. 0. 1. 0.]
 [0. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 4. 0. 0. 4. 0. 0.]
 [0. 4. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('B5-B4', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 0.]
 [0. 1. 4. 4. 4. 4. 0. 1.]
 [0. 0. 4. 0. 0. 4. 0. 0.]
 [0. 4. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('B2-A2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 0.]
 [0. 1. 4. 4. 4. 4. 0. 1.]
 [0. 0. 4. 0. 0. 4. 0. 0.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('B4-A4', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 0.]
 [1. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 4. 0. 0. 4. 0. 0.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F3-G3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 0.]
 [1. 0. 4. 4. 4. 4. 0. 1.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('H4-H3', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 0.]
 [1. 0. 4. 4. 4. 4. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F4-G5', [<BoardCommand.Hit_Red_PawnOnTarget: 0>, <BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 1. 0. 0.]
 [0. 0. 0. 1. 0. 0. 4. 0.]
 [1. 0. 4. 4. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (10, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F6-G5', [<BoardCommand.Hit_Blue_PawnOnTarget: 1>, <BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 0.]
 [1. 0. 4. 4. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 12)
Figure count r and b after move exec: (10, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E6-E7', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 0.]
 [1. 0. 4. 4. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 11)
Figure count r and b after move exec: (10, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D5-C4', [<BoardCommand.Hit_Blue_PawnOnTarget: 1>, <BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0.]
 [1. 0. 1. 4. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 11)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D4-D5', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 0. 1. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C4-B4', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G2-H2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 1. 0. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 0. 0. 0. 0. 4.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C7-D7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 0. 0. 0. 0. 4.]
 [0. 0. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C1-C2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 4. 0. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E8-F8', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 0. 1. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 4. 0. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C3-D3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 0. 1. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 4. 1.]
 [4. 0. 4. 0. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F8-G8', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 1. 1. 0. 0. 0. 2. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 4. 1.]
 [4. 0. 4. 0. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F1-G1', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 0. 0. 2. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 4. 1.]
 [4. 0. 4. 0. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('B8-C8', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 0. 2. 0. 0. 0. 2. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 4. 1.]
 [4. 0. 4. 0. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D3-C3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 2. 0. 0. 0. 2. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 4. 0. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('G8-F6', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 2. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 4. 0. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C2-D2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 2. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D6-C6', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 2. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D1-C1', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 2. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C8-D6', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C3-C4', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 0. 4. 0. 0. 1. 0.]
 [1. 1. 4. 0. 4. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 4. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C6-C5', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 1. 4. 0. 0. 1. 0.]
 [1. 1. 4. 0. 4. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 4. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G3-G4', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 1. 4. 0. 0. 1. 0.]
 [1. 1. 4. 0. 4. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('A4-B4', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 1. 4. 0. 0. 1. 0.]
 [0. 2. 4. 0. 4. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G4-H4', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 1. 4. 0. 0. 1. 0.]
 [0. 2. 4. 0. 4. 0. 0. 4.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C5-B5', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 1. 0. 4. 0. 0. 1. 0.]
 [0. 2. 4. 0. 4. 0. 0. 4.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C4-B5', [<BoardCommand.Hit_Red_PawnOnTarget: 0>, <BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 4. 0. 4. 0. 0. 1. 0.]
 [0. 2. 0. 0. 4. 0. 0. 4.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('B4-D3', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 4. 0. 4. 0. 0. 1. 0.]
 [0. 1. 0. 0. 4. 0. 0. 4.]
 [0. 0. 0. 1. 0. 0. 0. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D5-C5', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 4. 4. 0. 0. 0. 1. 0.]
 [0. 1. 0. 0. 4. 0. 0. 4.]
 [0. 0. 0. 1. 0. 0. 0. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D6-D5', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 4. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 4. 4. 1. 0. 0. 1. 0.]
 [0. 1. 0. 0. 4. 0. 0. 4.]
 [0. 0. 0. 1. 0. 0. 0. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E7-E8', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 4. 0. 1. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 4. 4. 1. 0. 0. 1. 0.]
 [0. 1. 0. 0. 4. 0. 0. 4.]
 [0. 0. 0. 1. 0. 0. 0. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.GAME_OVER_BLUE_WINS: 16>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
end status:

current Board
 [[0. 0. 1. 0. 4. 0. 1. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 4. 4. 1. 0. 0. 1. 0.]
 [0. 1. 0. 0. 4. 0. 0. 4.]
 [0. 0. 0. 1. 0. 0. 0. 1.]
 [4. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 4. 0. 0. 0. 4. 0.]]
Game status: [<DictMoveEntry.GAME_OVER_BLUE_WINS: 16>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
unmaking all moves..
 initial Board is:
current Board
 [[0. 1. 1. 1. 1. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 8. 0. 0. 4. 0.]
 [0. 0. 4. 4. 4. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
reconstructed board is:

current Board
 [[0. 1. 1. 1. 1. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 8. 0. 0. 4. 0.]
 [0. 0. 4. 4. 4. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
FEN: b0b0b01b01/2b03b01/8/3b01b02/1b01r01r02/2br1r03/b01r02r02/2r0r0r01
Board init:
current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 3. 0. 1. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 4. 0. 4. 0. 0.]]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C6-D4', [<BoardCommand.Hit_Blue_PawnOnTarget: 1>, <BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 0. 1. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 11)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D1-E1', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 0. 1. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C7-B7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 0. 1. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F4-G4', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 0. 1. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D5-E5', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 0. 1. 0. 0. 0.]
 [0. 4. 0. 0. 1. 1. 0. 0.]
 [0. 0. 0. 1. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G4-F4', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 0. 1. 0. 0. 0.]
 [0. 4. 0. 0. 1. 1. 0. 0.]
 [0. 0. 0. 1. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E6-D6', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 0. 0. 0.]
 [0. 4. 0. 0. 1. 1. 0. 0.]
 [0. 0. 0. 1. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E1-F1', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 0. 0. 0.]
 [0. 4. 0. 0. 1. 1. 0. 0.]
 [0. 0. 0. 1. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 0. 0. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E5-F4', [<BoardCommand.Hit_Blue_PawnOnTarget: 1>, <BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 0. 0. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 10)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C1-C2', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 8. 0. 0. 0. 4. 0.]
 [0. 4. 0. 0. 0. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E8-F8', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 0. 0. 1. 0. 2. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 8. 0. 0. 0. 4. 0.]
 [0. 4. 0. 0. 0. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C2-B4', [<BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 0. 0. 1. 0. 2. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 0. 0. 0. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F8-E6', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 0. 1. 0. 1. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 1. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 0. 0. 0. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F1-G3', [<BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 0. 0. 1. 0. 1. 0. 0.]
 [4. 1. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 1. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('B7-C7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 0. 1. 0. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 1. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('A7-B7', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 4. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 1. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F4-F3', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 4. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 1. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 4. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('B1-B2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 4. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 1. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 4. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F8-G8', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 0. 0. 1. 0.]
 [0. 4. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 1. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 4. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('B5-A5', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 1. 0. 0. 1. 0.]
 [0. 4. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 1. 0. 0. 0.]
 [4. 0. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 4. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E6-F6', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 0. 0. 1. 0.]
 [0. 4. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 4. 0.]
 [0. 4. 4. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('B2-B3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 1. 0. 0. 1. 0.]
 [0. 4. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 1. 0. 0.]
 [0. 4. 0. 1. 0. 0. 0. 0.]
 [0. 4. 0. 0. 0. 1. 4. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F5-F4', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 0. 0. 1. 0.]
 [0. 4. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 1. 4. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G3-G4', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 1. 0. 0. 1. 0.]
 [0. 4. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 4. 0.]
 [0. 4. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F3-E3', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 0. 0. 1. 0.]
 [0. 4. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 4. 0.]
 [0. 4. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('B7-A7', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 4. 0.]
 [0. 4. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E3-E2', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 4. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('A5-B5', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 4. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D8-D7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 4. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('B4-A4', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 1. 4. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E2-F2', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 1. 4. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G4-G5', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 0. 4. 0.]
 [4. 0. 0. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F2-E2', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 0. 4. 0.]
 [4. 0. 0. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('B3-A3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 0. 4. 0.]
 [4. 0. 0. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D4-E4', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [0. 4. 0. 0. 0. 0. 4. 0.]
 [4. 0. 0. 0. 1. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('B5-A5', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [4. 0. 0. 0. 1. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E4-D4', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [4. 0. 0. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F1-E1', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 1. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [4. 0. 0. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F7-F6', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 0. 0. 0.]
 [0. 0. 4. 1. 0. 2. 0. 0.]
 [4. 0. 0. 0. 0. 0. 4. 0.]
 [4. 0. 0. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (9, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G5-F6', [<BoardCommand.Hit_Red_KnightOnTarget: 2>, <BoardCommand.Move_Blue_Knight_no_Change: 8>, <BoardCommand.Delete_Blue_Pawn_from_StartPos: 14>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 0. 0. 0.]
 [0. 0. 4. 1. 0. 5. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (9, 9)
Figure count r and b after move exec: (8, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F4-G4', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 1. 0. 0. 0. 0.]
 [0. 0. 4. 1. 0. 5. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (8, 9)
Figure count r and b after move exec: (8, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F6-D7', [<BoardCommand.Hit_Red_PawnOnTarget: 0>, <BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 4. 0. 0. 0. 0.]
 [0. 0. 4. 1. 0. 1. 0. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (8, 9)
Figure count r and b after move exec: (7, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D6-D5', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 4. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [4. 0. 0. 1. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (7, 9)
Figure count r and b after move exec: (7, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C6-D6', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 0. 1. 4. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 1. 0. 0.]
 [4. 0. 0. 1. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (7, 9)
Figure count r and b after move exec: (7, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C7-B7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 1. 0. 4. 0. 0. 0. 0.]
 [0. 0. 0. 4. 0. 1. 0. 0.]
 [4. 0. 0. 1. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (7, 9)
Figure count r and b after move exec: (7, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D7-E7', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 0. 4. 0. 1. 0. 0.]
 [4. 0. 0. 1. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (7, 9)
Figure count r and b after move exec: (7, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E2-F2', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 1. 0. 0. 4. 0. 0. 0.]
 [0. 0. 0. 4. 0. 1. 0. 0.]
 [4. 0. 0. 1. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (7, 9)
Figure count r and b after move exec: (7, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E7-F7', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [4. 1. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 1. 0. 0.]
 [4. 0. 0. 1. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (7, 9)
Figure count r and b after move exec: (7, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('G8-G7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [4. 1. 0. 0. 0. 4. 1. 0.]
 [0. 0. 0. 4. 0. 1. 0. 0.]
 [4. 0. 0. 1. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (7, 9)
Figure count r and b after move exec: (7, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F7-F8', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 4. 0. 0.]
 [4. 1. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 4. 0. 1. 0. 0.]
 [4. 0. 0. 1. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.GAME_OVER_BLUE_WINS: 16>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (7, 9)
Figure count r and b after move exec: (7, 9)
end status:

current Board
 [[0. 0. 0. 0. 0. 4. 0. 0.]
 [4. 1. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 4. 0. 1. 0. 0.]
 [4. 0. 0. 1. 0. 0. 0. 0.]
 [4. 0. 0. 1. 0. 0. 1. 0.]
 [4. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.GAME_OVER_BLUE_WINS: 16>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
unmaking all moves..
 initial Board is:
current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 3. 0. 1. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
reconstructed board is:

current Board
 [[0. 0. 0. 1. 1. 1. 0. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 3. 0. 1. 0. 0. 0.]
 [0. 4. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 0. 4. 0.]
 [0. 4. 4. 4. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
=========================== short test summary info ===========================
FAILED test_moveGenerator.py::moveGenerator::test_TOTAL_ISIS_gameplay2_unmakeMove
=================== 1 failed, 43 passed, 5 skipped in 2.31s ===================
============================= test session starts =============================
platform win32 -- Python 3.12.3, pytest-8.2.0, pluggy-1.5.0
rootdir: C:\Users\admin\Uni\Module\Projekt_Symbolische_KI\Projekt\projektSKI\tests
collected 49 items

test_moveGenerator.py ......F............ss..................s.......ss  [100%]

================================== FAILURES ===================================
_____________ moveGenerator.test_TOTAL_ISIS_gameplay2_unmakeMove ______________

self = <tests.test_moveGenerator.moveGenerator testMethod=test_TOTAL_ISIS_gameplay2_unmakeMove>

    def test_TOTAL_ISIS_gameplay2_unmakeMove(self):
        def figureCount(bb: np.ndarray[np.uint64]):
                val1 = bin(bb[GameState._ZARR_INDEX_R_PAWNS])[2:].count("1")+ bin(bb[GameState._ZARR_INDEX_R_KNIGHTS])[2:].count("1")
                val2 = bin(bb[GameState._ZARR_INDEX_B_PAWNS])[2:].count("1")+ bin(bb[GameState._ZARR_INDEX_B_KNIGHTS])[2:].count("1")
                return val1,val2
        def checkCount(before,after):
            return all(list(map(lambda t: t[0] >= t[1], zip(before,after))))
    
        fdscr = open('test_data.json')
        moves = json.load(fdscr)
    
        testcases = [(move['board'],move['moves']) for move in moves]
    
        for case in testcases:
            fen,player = np.array(case[0].split(" "))
            #movelist = np.array([move.replace(" ","") for move in case[1].split(",")])
            print("FEN:", fen)
    
            bb = GameState.createBitBoardFromFEN(fen)
            initalBoard = bb.copy()
            mv = MoveGenerator(bb,True)
            gameover = [DictMoveEntry.CONTINUE_GAME]
            RedsTurn = True if player =="r" else False
            before = figureCount(bb)
            while(gameover[0] is DictMoveEntry.CONTINUE_GAME):
    
                player = Player.Red if RedsTurn else Player.Blue
                moves = mv.genMoves(player,gameover,bb)
    
                print("Players turn: ", player)
    
                a,b = 0, len(moves)
                move = moves[random.randint(a,b-1)]
                mv.prettyPrintMoves([move])
                #bb = mv.execSingleMove(move,player, gameover,bb)
                mv.execSingleMove(move,player, gameover,bb)
                mv.prettyPrintBoard(bb,gameover)
                print("Figure count r and b before move exec:", before)
                after = figureCount(bb)
                print("Figure count r and b after move exec:", after )
                correctness = checkCount(before,after)
                self.assertEqual(True, correctness)
                before = after
                #mv.prettyPrintBoard(bb,gameover)
                RedsTurn = not RedsTurn
            print("end status:\n")
            mv.prettyPrintBoard(bb,gameover)
            self.assertIsNot(gameover[0],DictMoveEntry.CONTINUE_GAME )
    
            sizeOfStack = len(mv._stack)
            [mv.takeback(bb) for x in range(sizeOfStack)]
            print("unmaking all moves..\n initial Board is:")
            mv.prettyPrintBoard(initalBoard,[DictMoveEntry.CONTINUE_GAME])
            print("reconstructed board is:\n")
            mv.prettyPrintBoard(bb,[DictMoveEntry.CONTINUE_GAME])
            [print(boards) for boards in list(zip(initalBoard,bb))]
            #self.assertEqual(np.array_equal(bb,initalBoard), True)
>           self.assertEqual(True,False)
E           AssertionError: True != False

test_moveGenerator.py:901: AssertionError
---------------------------- Captured stdout call -----------------------------
FEN: 1b0b0b0b0b0/1b01bb2b01/8/3bb1b02/5rr2/2r01r03/2rr5/r0r0r0r0r0r0
Board init:
current Board
 [[0. 1. 1. 1. 1. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 8. 0. 0. 4. 0.]
 [0. 0. 4. 4. 4. 4. 4. 0.]]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D4-C6', [<BoardCommand.Hit_Red_PawnOnTarget: 0>, <BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 1. 1. 1. 1. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 8. 0. 0. 4. 0.]
 [0. 0. 4. 4. 4. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (12, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E6-F6', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 1. 1. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 8. 0. 0. 4. 0.]
 [0. 0. 4. 4. 4. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('B2-C2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 1. 1. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 4. 4. 4. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D8-D7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 1. 1. 0.]
 [0. 0. 2. 1. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 4. 4. 4. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C1-D1', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 1. 1. 0. 1. 1. 1. 0.]
 [0. 0. 2. 1. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 0. 8. 4. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E8-E7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 0. 1. 1. 0.]
 [0. 0. 2. 1. 1. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 0. 8. 4. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G1-F1', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 1. 1. 0. 0. 1. 1. 0.]
 [0. 0. 2. 1. 1. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 0. 8. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F8-E8', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 2. 1. 1. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 0. 8. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D1-C3', [<BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 2. 1. 1. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 4. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 0. 4. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E7-D7', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 2. 2. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 4. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 0. 4. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C3-D3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 1. 1. 0. 1. 0. 1. 0.]
 [0. 0. 2. 2. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 0. 4. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E8-F8', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 1. 1. 0. 0. 1. 1. 0.]
 [0. 0. 2. 2. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 0. 4. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D1-E1', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 1. 1. 0. 0. 1. 1. 0.]
 [0. 0. 2. 2. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 0. 0. 8. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('B8-C8', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 0. 2. 0. 0. 1. 1. 0.]
 [0. 0. 2. 2. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 4. 0.]
 [0. 0. 0. 0. 8. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('G2-H2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 2. 0. 0. 1. 1. 0.]
 [0. 0. 2. 2. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 8. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D7-F6', [<BoardCommand.Move_Red_Knight_no_Change: 9>])

current Board
 [[0. 0. 2. 0. 0. 1. 1. 0.]
 [0. 0. 2. 1. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 2. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 8. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D3-D4', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 0. 2. 0. 0. 1. 1. 0.]
 [0. 0. 2. 1. 0. 0. 0. 0.]
 [0. 0. 4. 0. 0. 2. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 8. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 12)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D7-C6', [<BoardCommand.Hit_Blue_PawnOnTarget: 1>, <BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 2. 0. 0. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 2. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 8. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 12)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D4-E6', [<BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 0. 2. 0. 0. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 4. 2. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 8. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C8-E7', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 1. 0. 0. 1. 1. 0.]
 [0. 0. 2. 0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 4. 2. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 8. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C2-C3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 0. 1. 1. 0.]
 [0. 0. 2. 0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 4. 2. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 0. 0.]
 [0. 0. 4. 0. 0. 0. 0. 0.]
 [0. 0. 0. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 8. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F6-G4', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 1. 0. 0. 1. 1. 0.]
 [0. 0. 2. 0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 4. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 1. 0.]
 [0. 0. 4. 0. 0. 0. 0. 0.]
 [0. 0. 0. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 8. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E1-F3', [<BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 0. 1. 0. 0. 1. 1. 0.]
 [0. 0. 2. 0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 4. 1. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 1. 0.]
 [0. 0. 4. 0. 0. 4. 0. 0.]
 [0. 0. 0. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C6-C5', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 1. 0. 0. 1. 1. 0.]
 [0. 0. 2. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 1. 0. 0.]
 [0. 0. 1. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 1. 0.]
 [0. 0. 4. 0. 0. 4. 0. 0.]
 [0. 0. 0. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('C3-B3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 0. 1. 1. 0.]
 [0. 0. 2. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 1. 0. 0.]
 [0. 0. 1. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 1. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C7-B5', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 1. 0. 0. 1. 1. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 1. 0. 0.]
 [0. 1. 1. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 1. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 8. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E1-D1', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 0. 1. 1. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 1. 0. 0.]
 [0. 1. 1. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 1. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 8. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F8-G8', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 0. 1. 0. 0. 0. 2. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 1. 0. 0.]
 [0. 1. 1. 0. 0. 2. 0. 0.]
 [0. 0. 0. 4. 0. 4. 1. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 8. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D2-C4', [<BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 0. 1. 0. 0. 0. 2. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 1. 0. 0.]
 [0. 1. 1. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C5-B5', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 0. 1. 0. 0. 0. 2. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 1. 0. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 0. 4. 0. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D1-E1', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 0. 0. 2. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 1. 0. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('G8-F6', [<BoardCommand.Move_Red_Knight_no_Change: 9>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 2. 0. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [0. 4. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('B3-A3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 1. 0. 0. 0. 1. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 2. 0. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [4. 0. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C8-C7', [<BoardCommand.Upgrade_Red_KnightOnTarget: 5>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 2. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 2. 0. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [4. 0. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 8. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F1-E3', [<BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 2. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 4. 2. 0. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [4. 0. 0. 0. 4. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('G8-G7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 1. 0. 1. 0.]
 [0. 0. 0. 0. 4. 2. 0. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [4. 0. 0. 0. 4. 4. 0. 0.]
 [0. 0. 0. 4. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D2-D3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 1. 0. 1. 0.]
 [0. 0. 0. 0. 4. 2. 0. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [4. 0. 0. 4. 4. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E7-F7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 0. 1. 1. 0.]
 [0. 0. 0. 0. 4. 2. 0. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [4. 0. 0. 4. 4. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 4.]
 [0. 0. 0. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('H2-G2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 0. 1. 1. 0.]
 [0. 0. 0. 0. 4. 2. 0. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [4. 0. 0. 4. 4. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('G7-G6', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 4. 2. 1. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 4. 0. 4. 1. 0.]
 [4. 0. 0. 4. 4. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D3-D4', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 4. 2. 1. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 8. 0. 4. 1. 0.]
 [4. 0. 0. 0. 4. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F6-E4', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 4. 1. 1. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 8. 1. 4. 1. 0.]
 [4. 0. 0. 0. 4. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F1-E1', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 4. 1. 1. 0.]
 [0. 2. 0. 0. 0. 2. 0. 0.]
 [0. 0. 4. 8. 1. 4. 1. 0.]
 [4. 0. 0. 0. 4. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 8. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F5-G3', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 4. 1. 1. 0.]
 [0. 2. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 8. 1. 4. 1. 0.]
 [4. 0. 0. 0. 4. 4. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 8. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F3-F4', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 4. 1. 1. 0.]
 [0. 2. 0. 0. 0. 1. 0. 0.]
 [0. 0. 4. 8. 1. 8. 1. 0.]
 [4. 0. 0. 0. 4. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 8. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F5-E5', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 4. 1. 1. 0.]
 [0. 2. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 8. 1. 8. 1. 0.]
 [4. 0. 0. 0. 4. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 8. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (11, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E6-F7', [<BoardCommand.Hit_Red_PawnOnTarget: 0>, <BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 2. 0. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 0.]
 [0. 2. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 8. 1. 8. 1. 0.]
 [4. 0. 0. 0. 4. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 8. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (11, 11)
Figure count r and b after move exec: (10, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C7-A6', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 4. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0.]
 [0. 2. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 8. 1. 8. 1. 0.]
 [4. 0. 0. 0. 4. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 8. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 11)
Figure count r and b after move exec: (10, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E3-D3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 4. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0.]
 [0. 2. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 8. 1. 8. 1. 0.]
 [4. 0. 0. 4. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 8. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 11)
Figure count r and b after move exec: (10, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('C7-B7', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 4. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0.]
 [0. 2. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 8. 1. 8. 1. 0.]
 [4. 0. 0. 4. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 8. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 11)
Figure count r and b after move exec: (10, 11)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E1-D3', [<BoardCommand.Move_Blue_Knight_no_Change: 8>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 4. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0.]
 [0. 2. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 8. 1. 8. 1. 0.]
 [4. 0. 0. 8. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 11)
Figure count r and b after move exec: (10, 11)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E5-D4', [<BoardCommand.Hit_Blue_KnightOnTarget: 3>, <BoardCommand.Move_Red_Knight_no_Change: 9>, <BoardCommand.Delete_Red_Pawn_from_StartPos: 13>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 4. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0.]
 [0. 2. 0. 0. 0. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 0. 8. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 11)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D3-E5', [<BoardCommand.Degrade_Blue_KnightOnTarget: 6>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 4. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0.]
 [0. 2. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 0. 4. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('A6-A5', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 0.]
 [1. 2. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 0. 4. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F7-G7', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 1. 1. 0.]
 [1. 2. 0. 0. 4. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 0. 4. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 10)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('F6-E5', [<BoardCommand.Hit_Blue_PawnOnTarget: 1>, <BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0.]
 [1. 2. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 0. 4. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 10)
Figure count r and b after move exec: (10, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D3-E3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0.]
 [1. 2. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 0. 0. 4. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 9)
Figure count r and b after move exec: (10, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('G6-H6', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 2. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 0. 0. 4. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 4. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 9)
Figure count r and b after move exec: (10, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E1-F1', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 2. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 0. 0. 4. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 9)
Figure count r and b after move exec: (10, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('B5-C3', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 1. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 1. 0. 4. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 4. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 9)
Figure count r and b after move exec: (10, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('F1-F2', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 1. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 1. 0. 4. 0. 1. 0.]
 [0. 0. 0. 0. 0. 4. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 9)
Figure count r and b after move exec: (10, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('G3-F3', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 1. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 1. 0. 4. 1. 0. 0.]
 [0. 0. 0. 0. 0. 4. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 9)
Figure count r and b after move exec: (10, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('E3-D3', [<BoardCommand.Move_Blue_Pawn_no_Change: 10>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 1. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 3. 1. 8. 1. 0.]
 [4. 0. 1. 4. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 4. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 9)
Figure count r and b after move exec: (10, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('D4-E2', [<BoardCommand.Degrade_Red_KnightOnTarget: 7>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 1. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 4. 1. 8. 1. 0.]
 [4. 0. 1. 4. 0. 1. 0. 0.]
 [0. 0. 0. 0. 1. 4. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 9)
Figure count r and b after move exec: (10, 9)
Players turn:  Player.Blue

Moves generated from MoveGenerator:
('D3-D4', [<BoardCommand.Upgrade_Blue_KnightOnTarget: 4>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 1. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 8. 1. 8. 1. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 1. 4. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 9)
Figure count r and b after move exec: (10, 9)
Players turn:  Player.Red

Moves generated from MoveGenerator:
('E2-E1', [<BoardCommand.Move_Red_Pawn_no_Change: 11>])

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 1. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 8. 1. 8. 1. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 4. 4. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0.]]
Game status: [<DictMoveEntry.GAME_OVER_RED_WINS: 17>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
Figure count r and b before move exec: (10, 9)
Figure count r and b after move exec: (10, 9)
end status:

current Board
 [[0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 4. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 1. 0. 0. 1. 0. 0. 0.]
 [0. 0. 4. 8. 1. 8. 1. 0.]
 [4. 0. 1. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 4. 4. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0.]]
Game status: [<DictMoveEntry.GAME_OVER_RED_WINS: 17>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
unmaking all moves..
 initial Board is:
current Board
 [[0. 1. 1. 1. 1. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 8. 0. 0. 4. 0.]
 [0. 0. 4. 4. 4. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
reconstructed board is:

current Board
 [[0. 1. 1. 1. 1. 1. 1. 0.]
 [0. 0. 2. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 2. 0. 0.]
 [0. 0. 0. 8. 0. 4. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 4. 0. 8. 0. 0. 4. 0.]
 [0. 0. 4. 4. 4. 4. 4. 0.]]
Game status: [<DictMoveEntry.CONTINUE_GAME: 18>]
1 = red, 4 = blue, 2 = rr, 3 = br, 5= rb, 8= bb
(np.uint64(9088308045678641152), np.uint64(9088308045678641152))
(np.uint64(9007216434610176), np.uint64(9007250794348544))
(np.uint64(335565374), np.uint64(335565374))
(np.uint64(268439552), np.uint64(268439552))
=========================== short test summary info ===========================
FAILED test_moveGenerator.py::moveGenerator::test_TOTAL_ISIS_gameplay2_unmakeMove
=================== 1 failed, 43 passed, 5 skipped in 2.62s ===================
